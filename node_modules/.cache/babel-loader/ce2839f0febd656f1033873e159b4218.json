{"ast":null,"code":"import _classCallCheck from \"/Users/BEIATRIX/Documents/_github/beiatrix.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/BEIATRIX/Documents/_github/beiatrix.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/BEIATRIX/Documents/_github/beiatrix.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/BEIATRIX/Documents/_github/beiatrix.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/BEIATRIX/Documents/_github/beiatrix.github.io/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/BEIATRIX/Documents/_github/beiatrix.github.io/src/ThemeSwitcher.js\";\nimport React, { Component } from 'react';\nimport { SplitButton, MenuItem } from 'react-bootstrap';\n\nvar ThemeSwitcher =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ThemeSwitcher, _Component);\n\n  function ThemeSwitcher() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ThemeSwitcher);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ThemeSwitcher)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: null\n    };\n\n    _this.chooseTheme = function (theme, evt) {\n      evt.preventDefault();\n\n      if (theme.toLowerCase() === 'reset') {\n        theme = null;\n      }\n\n      _this.setState({\n        theme: theme\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ThemeSwitcher, [{\n    key: \"render\",\n    value: function render() {\n      var theme = this.state.theme;\n      var themeClass = theme ? theme.toLowerCase() : 'default';\n      var parentContainerStyles = {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        display: 'table'\n      };\n      var subContainerStyles = {\n        position: 'relative',\n        height: '100%',\n        width: '100%',\n        display: 'table-cell',\n        verticalAlign: 'middle'\n      };\n      return React.createElement(\"div\", {\n        style: parentContainerStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: subContainerStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"h1 center-block text-center text-\".concat(theme ? themeClass : 'muted'),\n        style: {\n          marginBottom: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, theme || 'Default'), React.createElement(\"div\", {\n        className: \"center-block text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(SplitButton, {\n        bsSize: \"large\",\n        bsStyle: themeClass,\n        title: \"\".concat(theme || 'Default', \" Theme\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        eventKey: \"Primary\",\n        onSelect: this.chooseTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Primary Theme\"), React.createElement(MenuItem, {\n        eventKey: \"Danger\",\n        onSelect: this.chooseTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Danger Theme\"), React.createElement(MenuItem, {\n        eventKey: \"Success\",\n        onSelect: this.chooseTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Success Theme\"), React.createElement(MenuItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        eventKey: \"Reset\",\n        onSelect: this.chooseTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Default Theme\")))));\n    }\n  }]);\n\n  return ThemeSwitcher;\n}(Component);\n\nexport default ThemeSwitcher;","map":{"version":3,"sources":["/Users/BEIATRIX/Documents/_github/beiatrix.github.io/src/ThemeSwitcher.js"],"names":["React","Component","SplitButton","MenuItem","ThemeSwitcher","state","theme","chooseTheme","evt","preventDefault","toLowerCase","setState","themeClass","parentContainerStyles","position","height","width","display","subContainerStyles","verticalAlign","marginBottom"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,iBAAtC;;IAEMC,a;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AAAEC,MAAAA,KAAK,EAAE;AAAT,K;;UAERC,W,GAAc,UAACD,KAAD,EAAQE,GAAR,EAAgB;AAC5BA,MAAAA,GAAG,CAACC,cAAJ;;AACA,UAAIH,KAAK,CAACI,WAAN,OAAwB,OAA5B,EAAqC;AAAEJ,QAAAA,KAAK,GAAG,IAAR;AAAc;;AACrD,YAAKK,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,UAECA,KAFD,GAEW,KAAKD,KAFhB,CAECC,KAFD;AAGP,UAAMM,UAAU,GAAGN,KAAK,GAAGA,KAAK,CAACI,WAAN,EAAH,GAAyB,SAAjD;AAEA,UAAMG,qBAAqB,GAAG;AAC5BC,QAAAA,QAAQ,EAAE,UADkB;AAE5BC,QAAAA,MAAM,EAAE,MAFoB;AAG5BC,QAAAA,KAAK,EAAE,MAHqB;AAI5BC,QAAAA,OAAO,EAAE;AAJmB,OAA9B;AAOA,UAAMC,kBAAkB,GAAG;AACzBJ,QAAAA,QAAQ,EAAE,UADe;AAEzBC,QAAAA,MAAM,EAAE,MAFiB;AAGzBC,QAAAA,KAAK,EAAE,MAHkB;AAIzBC,QAAAA,OAAO,EAAE,YAJgB;AAKzBE,QAAAA,aAAa,EAAE;AALU,OAA3B;AAQA,aACE;AAAK,QAAA,KAAK,EAAEN,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAEK,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAM,QAAA,SAAS,6CAAsCZ,KAAK,GAAGM,UAAH,GAAgB,OAA3D,CAAf;AAAqF,QAAA,KAAK,EAAE;AAAEQ,UAAAA,YAAY,EAAE;AAAhB,SAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmHd,KAAK,IAAI,SAA5H,CAFF,EAIE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAC,OAApB;AAA4B,QAAA,OAAO,EAAEM,UAArC;AAAiD,QAAA,KAAK,YAAKN,KAAK,IAAI,SAAd,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,SAAnB;AAA6B,QAAA,QAAQ,EAAE,KAAKC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,QAAnB;AAA4B,QAAA,QAAQ,EAAE,KAAKA,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,SAAnB;AAA6B,QAAA,QAAQ,EAAE,KAAKA,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,EAIE,oBAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,OAAnB;AAA2B,QAAA,QAAQ,EAAE,KAAKA,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,CADF,CAJF,CADF,CADF;AAoBD;;;;EAlDyBN,S;;AAsD5B,eAAeG,aAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport { SplitButton, MenuItem } from 'react-bootstrap';\n\nclass ThemeSwitcher extends Component {\n\n  state = { theme: null }\n  \n  chooseTheme = (theme, evt) => {\n    evt.preventDefault();\n    if (theme.toLowerCase() === 'reset') { theme = null }\n    this.setState({ theme });\n  }\n  \n  render() {\n  \n    const { theme } = this.state;\n    const themeClass = theme ? theme.toLowerCase() : 'default';\n    \n    const parentContainerStyles = {\n      position: 'absolute',\n      height: '100%',\n      width: '100%',\n      display: 'table'\n    };\n    \n    const subContainerStyles = {\n      position: 'relative',\n      height: '100%',\n      width: '100%',\n      display: 'table-cell',\n      verticalAlign: 'middle'\n    };\n    \n    return (\n      <div style={parentContainerStyles}>\n        <div style={subContainerStyles}>\n        \n          <span className={`h1 center-block text-center text-${theme ? themeClass : 'muted'}`} style={{ marginBottom: 25 }}>{theme || 'Default'}</span>\n          \n          <div className=\"center-block text-center\">\n            <SplitButton bsSize=\"large\" bsStyle={themeClass} title={`${theme || 'Default'} Theme`}>\n              <MenuItem eventKey=\"Primary\" onSelect={this.chooseTheme}>Primary Theme</MenuItem>\n              <MenuItem eventKey=\"Danger\" onSelect={this.chooseTheme}>Danger Theme</MenuItem>\n              <MenuItem eventKey=\"Success\" onSelect={this.chooseTheme}>Success Theme</MenuItem>\n              <MenuItem divider />\n              <MenuItem eventKey=\"Reset\" onSelect={this.chooseTheme}>Default Theme</MenuItem>\n            </SplitButton>\n          </div>\n          \n        </div>\n      </div>\n    );\n    \n  }\n  \n}\n\nexport default ThemeSwitcher;"]},"metadata":{},"sourceType":"module"}